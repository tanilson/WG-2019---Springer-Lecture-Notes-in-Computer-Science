%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 1123 790
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, July 26, 2018 2:10:06 PM BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
1123 790 setpagesize
0 0 0 0 setmargins
0 0 setorigin
1123 790 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1123.00 0.00000 l
1123.00 790.000 l
0.00000 790.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1123.00 0.00000 l
1123.00 790.000 l
0.00000 790.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 1123 790 rc
q
[ .508145 0.00000 0.00000 .508145 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 775.000 -2.00000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-775.000 2.00000 m
1435.00 2.00000 l
1435.00 1557.00 l
-775.000 1557.00 l
-775.000 2.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ .508145 0.00000 0.00000 .508145 393.812 -1.01629 ] defaultmatrix matrix concatmatrix setmatrix
[ .508145 0.00000 0.00000 .508145 393.812 -1.01629 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ .508145 0.00000 0.00000 .508145 393.812 -1.01629 ] defaultmatrix matrix concatmatrix setmatrix
5.00000 w
0 J
1.45000 M
newpath
971.500 590.000 m
971.500 598.284 964.784 605.000 956.500 605.000  c
948.216 605.000 941.500 598.284 941.500 590.000  c
941.500 581.716 948.216 575.000 956.500 575.000  c
964.784 575.000 971.500 581.716 971.500 590.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1151.50 590.000 m
1151.50 598.284 1144.78 605.000 1136.50 605.000  c
1128.22 605.000 1121.50 598.284 1121.50 590.000  c
1121.50 581.716 1128.22 575.000 1136.50 575.000  c
1144.78 575.000 1151.50 581.716 1151.50 590.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
971.500 740.000 m
971.500 748.284 964.784 755.000 956.500 755.000  c
948.216 755.000 941.500 748.284 941.500 740.000  c
941.500 731.716 948.216 725.000 956.500 725.000  c
964.784 725.000 971.500 731.716 971.500 740.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1151.50 740.000 m
1151.50 748.284 1144.78 755.000 1136.50 755.000  c
1128.22 755.000 1121.50 748.284 1121.50 740.000  c
1121.50 731.716 1128.22 725.000 1136.50 725.000  c
1144.78 725.000 1151.50 731.716 1151.50 740.000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 1157.00 731.000 ] concat
0 0 92 82 rc
q
q
q
Q
q
Q
q
Q
q
Q
newpath
4.59375 10.5469 m
13.9844 10.5469 l
13.9844 24.4375 l
27.8594 24.4375 l
27.8594 10.5469 l
37.2500 10.5469 l
37.2500 47.0000 l
27.8594 47.0000 l
27.8594 31.5469 l
13.9844 31.5469 l
13.9844 47.0000 l
4.59375 47.0000 l
4.59375 10.5469 l
h
f
newpath
55.8281 63.3594 m
71.2344 63.3594 l
71.2344 70.0000 l
45.7969 70.0000 l
45.7969 63.3594 l
58.5781 52.0938 l
59.7135 51.0625 60.5547 50.0547 61.1016 49.0703  c
61.6484 48.0859 61.9219 47.0625 61.9219 46.0000  c
61.9219 44.3542 61.3724 43.0312 60.2734 42.0312  c
59.1745 41.0312 57.7083 40.5312 55.8750 40.5312  c
54.4688 40.5312 52.9297 40.8333 51.2578 41.4375  c
49.5859 42.0417 47.7969 42.9375 45.8906 44.1250  c
45.8906 36.4375 l
47.9219 35.7604 49.9297 35.2474 51.9141 34.8984  c
53.8984 34.5495 55.8438 34.3750 57.7500 34.3750  c
61.9375 34.3750 65.1927 35.2969 67.5156 37.1406  c
69.8385 38.9844 71.0000 41.5521 71.0000 44.8438  c
71.0000 46.7500 70.5078 48.5286 69.5234 50.1797  c
68.5391 51.8307 66.4688 54.0365 63.3125 56.7969  c
55.8281 63.3594 l
h
f
Q
Q
Q
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1061.50 530.000 m
1061.50 538.284 1054.78 545.000 1046.50 545.000  c
1038.22 545.000 1031.50 538.284 1031.50 530.000  c
1031.50 521.716 1038.22 515.000 1046.50 515.000  c
1054.78 515.000 1061.50 521.716 1061.50 530.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1061.50 800.000 m
1061.50 808.284 1054.78 815.000 1046.50 815.000  c
1038.22 815.000 1031.50 808.284 1031.50 800.000  c
1031.50 791.716 1038.22 785.000 1046.50 785.000  c
1054.78 785.000 1061.50 791.716 1061.50 800.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1241.50 650.000 m
1241.50 658.284 1234.78 665.000 1226.50 665.000  c
1218.22 665.000 1211.50 658.284 1211.50 650.000  c
1211.50 641.716 1218.22 635.000 1226.50 635.000  c
1234.78 635.000 1241.50 641.716 1241.50 650.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
881.500 650.000 m
881.500 658.284 874.784 665.000 866.500 665.000  c
858.216 665.000 851.500 658.284 851.500 650.000  c
851.500 641.716 858.216 635.000 866.500 635.000  c
874.784 635.000 881.500 641.716 881.500 650.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1061.50 620.000 m
1061.50 628.284 1054.78 635.000 1046.50 635.000  c
1038.22 635.000 1031.50 628.284 1031.50 620.000  c
1031.50 611.716 1038.22 605.000 1046.50 605.000  c
1054.78 605.000 1061.50 611.716 1061.50 620.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1061.50 710.000 m
1061.50 718.284 1054.78 725.000 1046.50 725.000  c
1038.22 725.000 1031.50 718.284 1031.50 710.000  c
1031.50 701.716 1038.22 695.000 1046.50 695.000  c
1054.78 695.000 1061.50 701.716 1061.50 710.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1006.50 665.000 m
1006.50 673.284 999.784 680.000 991.500 680.000  c
983.216 680.000 976.500 673.284 976.500 665.000  c
976.500 656.716 983.216 650.000 991.500 650.000  c
999.784 650.000 1006.50 656.716 1006.50 665.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1121.50 665.000 m
1121.50 673.284 1114.78 680.000 1106.50 680.000  c
1098.22 680.000 1091.50 673.284 1091.50 665.000  c
1091.50 656.716 1098.22 650.000 1106.50 650.000  c
1114.78 650.000 1121.50 656.716 1121.50 665.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
444.945 590.000 m
444.945 598.284 438.229 605.000 429.945 605.000  c
421.660 605.000 414.945 598.284 414.945 590.000  c
414.945 581.716 421.660 575.000 429.945 575.000  c
438.229 575.000 444.945 581.716 444.945 590.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
624.945 590.000 m
624.945 598.284 618.229 605.000 609.945 605.000  c
601.660 605.000 594.945 598.284 594.945 590.000  c
594.945 581.716 601.660 575.000 609.945 575.000  c
618.229 575.000 624.945 581.716 624.945 590.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
444.945 740.000 m
444.945 748.284 438.229 755.000 429.945 755.000  c
421.660 755.000 414.945 748.284 414.945 740.000  c
414.945 731.716 421.660 725.000 429.945 725.000  c
438.229 725.000 444.945 731.716 444.945 740.000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 346.000 731.000 ] concat
0 0 92 82 rc
q
q
q
Q
q
Q
q
Q
q
Q
newpath
4.59375 10.5469 m
13.9844 10.5469 l
13.9844 24.4375 l
27.8594 24.4375 l
27.8594 10.5469 l
37.2500 10.5469 l
37.2500 47.0000 l
27.8594 47.0000 l
27.8594 31.5469 l
13.9844 31.5469 l
13.9844 47.0000 l
4.59375 47.0000 l
4.59375 10.5469 l
h
f
newpath
47.6250 63.7656 m
55.5938 63.7656 l
55.5938 41.1406 l
47.4219 42.8281 l
47.4219 36.6875 l
55.5469 35.0000 l
64.1250 35.0000 l
64.1250 63.7656 l
72.0938 63.7656 l
72.0938 70.0000 l
47.6250 70.0000 l
47.6250 63.7656 l
h
f
Q
Q
Q
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
624.945 740.000 m
624.945 748.284 618.229 755.000 609.945 755.000  c
601.660 755.000 594.945 748.284 594.945 740.000  c
594.945 731.716 601.660 725.000 609.945 725.000  c
618.229 725.000 624.945 731.716 624.945 740.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
534.945 530.000 m
534.945 538.284 528.229 545.000 519.945 545.000  c
511.660 545.000 504.945 538.284 504.945 530.000  c
504.945 521.716 511.660 515.000 519.945 515.000  c
528.229 515.000 534.945 521.716 534.945 530.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
534.945 800.000 m
534.945 808.284 528.229 815.000 519.945 815.000  c
511.660 815.000 504.945 808.284 504.945 800.000  c
504.945 791.716 511.660 785.000 519.945 785.000  c
528.229 785.000 534.945 791.716 534.945 800.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
714.945 650.000 m
714.945 658.284 708.229 665.000 699.945 665.000  c
691.660 665.000 684.945 658.284 684.945 650.000  c
684.945 641.716 691.660 635.000 699.945 635.000  c
708.229 635.000 714.945 641.716 714.945 650.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
354.945 650.000 m
354.945 658.284 348.229 665.000 339.945 665.000  c
331.660 665.000 324.945 658.284 324.945 650.000  c
324.945 641.716 331.660 635.000 339.945 635.000  c
348.229 635.000 354.945 641.716 354.945 650.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
534.945 620.000 m
534.945 628.284 528.229 635.000 519.945 635.000  c
511.660 635.000 504.945 628.284 504.945 620.000  c
504.945 611.716 511.660 605.000 519.945 605.000  c
528.229 605.000 534.945 611.716 534.945 620.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
534.945 710.000 m
534.945 718.284 528.229 725.000 519.945 725.000  c
511.660 725.000 504.945 718.284 504.945 710.000  c
504.945 701.716 511.660 695.000 519.945 695.000  c
528.229 695.000 534.945 701.716 534.945 710.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
479.945 665.000 m
479.945 673.284 473.229 680.000 464.945 680.000  c
456.660 680.000 449.945 673.284 449.945 665.000  c
449.945 656.716 456.660 650.000 464.945 650.000  c
473.229 650.000 479.945 656.716 479.945 665.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
594.945 665.000 m
594.945 673.284 588.229 680.000 579.945 680.000  c
571.660 680.000 564.945 673.284 564.945 665.000  c
564.945 656.716 571.660 650.000 579.945 650.000  c
588.229 650.000 594.945 656.716 594.945 665.000  c
h
S
1.00000 w
2 J
10.0000 M
newpath
799.000 950.000 m
799.000 966.569 785.569 980.000 769.000 980.000  c
752.431 980.000 739.000 966.569 739.000 950.000  c
739.000 933.431 752.431 920.000 769.000 920.000  c
785.569 920.000 799.000 933.431 799.000 950.000  c
h
f
5.00000 w
0 J
1.45000 M
newpath
799.000 950.000 m
799.000 966.569 785.569 980.000 769.000 980.000  c
752.431 980.000 739.000 966.569 739.000 950.000  c
739.000 933.431 752.431 920.000 769.000 920.000  c
785.569 920.000 799.000 933.431 799.000 950.000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
794.301 1025.13 m
774.520 1051.74 l
795.316 1079.82 l
784.723 1079.82 l
768.801 1058.34 l
752.895 1079.82 l
742.285 1079.82 l
763.535 1051.21 l
744.098 1025.13 l
754.691 1025.13 l
769.191 1044.62 l
783.691 1025.13 l
794.301 1025.13 l
h
f
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
1121.50 935.000 m
1121.50 943.284 1114.78 950.000 1106.50 950.000  c
1098.22 950.000 1091.50 943.284 1091.50 935.000  c
1091.50 926.716 1098.22 920.000 1106.50 920.000  c
1114.78 920.000 1121.50 926.716 1121.50 935.000  c
h
f
5.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1121.50 935.000 m
1121.50 943.284 1114.78 950.000 1106.50 950.000  c
1098.22 950.000 1091.50 943.284 1091.50 935.000  c
1091.50 926.716 1098.22 920.000 1106.50 920.000  c
1114.78 920.000 1121.50 926.716 1121.50 935.000  c
h
S
1.00000 w
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
1211.50 935.000 m
1211.50 943.284 1204.78 950.000 1196.50 950.000  c
1188.22 950.000 1181.50 943.284 1181.50 935.000  c
1181.50 926.716 1188.22 920.000 1196.50 920.000  c
1204.78 920.000 1211.50 926.716 1211.50 935.000  c
h
f
5.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1211.50 935.000 m
1211.50 943.284 1204.78 950.000 1196.50 950.000  c
1188.22 950.000 1181.50 943.284 1181.50 935.000  c
1181.50 926.716 1188.22 920.000 1196.50 920.000  c
1204.78 920.000 1211.50 926.716 1211.50 935.000  c
h
S
1.00000 w
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
1301.50 935.000 m
1301.50 943.284 1294.78 950.000 1286.50 950.000  c
1278.22 950.000 1271.50 943.284 1271.50 935.000  c
1271.50 926.716 1278.22 920.000 1286.50 920.000  c
1294.78 920.000 1301.50 926.716 1301.50 935.000  c
h
f
5.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1301.50 935.000 m
1301.50 943.284 1294.78 950.000 1286.50 950.000  c
1278.22 950.000 1271.50 943.284 1271.50 935.000  c
1271.50 926.716 1278.22 920.000 1286.50 920.000  c
1294.78 920.000 1301.50 926.716 1301.50 935.000  c
h
S
1.00000 w
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
1211.50 864.406 m
1211.50 872.691 1204.78 879.406 1196.50 879.406  c
1188.22 879.406 1181.50 872.691 1181.50 864.406  c
1181.50 856.122 1188.22 849.406 1196.50 849.406  c
1204.78 849.406 1211.50 856.122 1211.50 864.406  c
h
f
5.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1211.50 864.406 m
1211.50 872.691 1204.78 879.406 1196.50 879.406  c
1188.22 879.406 1181.50 872.691 1181.50 864.406  c
1181.50 856.122 1188.22 849.406 1196.50 849.406  c
1204.78 849.406 1211.50 856.122 1211.50 864.406  c
h
S
1.00000 w
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
1211.50 1025.00 m
1211.50 1033.28 1204.78 1040.00 1196.50 1040.00  c
1188.22 1040.00 1181.50 1033.28 1181.50 1025.00  c
1181.50 1016.72 1188.22 1010.00 1196.50 1010.00  c
1204.78 1010.00 1211.50 1016.72 1211.50 1025.00  c
h
f
5.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1211.50 1025.00 m
1211.50 1033.28 1204.78 1040.00 1196.50 1040.00  c
1188.22 1040.00 1181.50 1033.28 1181.50 1025.00  c
1181.50 1016.72 1188.22 1010.00 1196.50 1010.00  c
1204.78 1010.00 1211.50 1016.72 1211.50 1025.00  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 1229.00 999.000 ] concat
0 0 140 82 rc
q
q
q
Q
q
Q
q
Q
q
Q
newpath
4.59375 10.5469 m
13.9844 10.5469 l
13.9844 23.8594 l
27.5469 10.5469 l
38.4531 10.5469 l
20.9062 27.8125 l
40.2656 47.0000 l
28.4844 47.0000 l
13.9844 32.6406 l
13.9844 47.0000 l
4.59375 47.0000 l
4.59375 10.5469 l
h
f
newpath
52.8281 63.3594 m
68.2344 63.3594 l
68.2344 70.0000 l
42.7969 70.0000 l
42.7969 63.3594 l
55.5781 52.0938 l
56.7135 51.0625 57.5547 50.0547 58.1016 49.0703  c
58.6484 48.0859 58.9219 47.0625 58.9219 46.0000  c
58.9219 44.3542 58.3724 43.0312 57.2734 42.0312  c
56.1745 41.0312 54.7083 40.5312 52.8750 40.5312  c
51.4688 40.5312 49.9297 40.8333 48.2578 41.4375  c
46.5859 42.0417 44.7969 42.9375 42.8906 44.1250  c
42.8906 36.4375 l
44.9219 35.7604 46.9297 35.2474 48.9141 34.8984  c
50.8984 34.5495 52.8438 34.3750 54.7500 34.3750  c
58.9375 34.3750 62.1927 35.2969 64.5156 37.1406  c
66.8385 38.9844 68.0000 41.5521 68.0000 44.8438  c
68.0000 46.7500 67.5078 48.5286 66.5234 50.1797  c
65.5391 51.8307 63.4688 54.0365 60.3125 56.7969  c
52.8281 63.3594 l
h
77.3047 60.9219 m
85.7422 60.9219 l
85.7422 68.0781 l
79.9453 76.8281 l
74.9609 76.8281 l
77.3047 68.0781 l
77.3047 60.9219 l
h
108.305 42.4375 m
98.4141 57.0781 l
108.305 57.0781 l
108.305 42.4375 l
h
106.805 35.0000 m
116.836 35.0000 l
116.836 57.0781 l
121.836 57.0781 l
121.836 63.6250 l
116.836 63.6250 l
116.836 70.0000 l
108.305 70.0000 l
108.305 63.6250 l
92.7891 63.6250 l
92.7891 55.8906 l
106.805 35.0000 l
h
f
Q
Q
Q
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
8.38924 590.000 m
8.38924 598.284 1.67351 605.000 -6.61076 605.000  c
-14.8950 605.000 -21.6108 598.284 -21.6108 590.000  c
-21.6108 581.716 -14.8950 575.000 -6.61076 575.000  c
1.67351 575.000 8.38924 581.716 8.38924 590.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
188.389 590.000 m
188.389 598.284 181.674 605.000 173.389 605.000  c
165.105 605.000 158.389 598.284 158.389 590.000  c
158.389 581.716 165.105 575.000 173.389 575.000  c
181.674 575.000 188.389 581.716 188.389 590.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
8.38924 740.000 m
8.38924 748.284 1.67351 755.000 -6.61076 755.000  c
-14.8950 755.000 -21.6108 748.284 -21.6108 740.000  c
-21.6108 731.716 -14.8950 725.000 -6.61076 725.000  c
1.67351 725.000 8.38924 731.716 8.38924 740.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
188.389 740.000 m
188.389 748.284 181.674 755.000 173.389 755.000  c
165.105 755.000 158.389 748.284 158.389 740.000  c
158.389 731.716 165.105 725.000 173.389 725.000  c
181.674 725.000 188.389 731.716 188.389 740.000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 194.000 731.000 ] concat
0 0 92 82 rc
q
q
q
Q
q
Q
q
Q
q
Q
newpath
4.59375 10.5469 m
13.9844 10.5469 l
13.9844 24.4375 l
27.8594 24.4375 l
27.8594 10.5469 l
37.2500 10.5469 l
37.2500 47.0000 l
27.8594 47.0000 l
27.8594 31.5469 l
13.9844 31.5469 l
13.9844 47.0000 l
4.59375 47.0000 l
4.59375 10.5469 l
h
f
newpath
59.6719 42.4375 m
49.7812 57.0781 l
59.6719 57.0781 l
59.6719 42.4375 l
h
58.1719 35.0000 m
68.2031 35.0000 l
68.2031 57.0781 l
73.2031 57.0781 l
73.2031 63.6250 l
68.2031 63.6250 l
68.2031 70.0000 l
59.6719 70.0000 l
59.6719 63.6250 l
44.1562 63.6250 l
44.1562 55.8906 l
58.1719 35.0000 l
h
f
Q
Q
Q
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
98.3892 530.000 m
98.3892 538.284 91.6735 545.000 83.3892 545.000  c
75.1050 545.000 68.3892 538.284 68.3892 530.000  c
68.3892 521.716 75.1050 515.000 83.3892 515.000  c
91.6735 515.000 98.3892 521.716 98.3892 530.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
98.3892 800.000 m
98.3892 808.284 91.6735 815.000 83.3892 815.000  c
75.1050 815.000 68.3892 808.284 68.3892 800.000  c
68.3892 791.716 75.1050 785.000 83.3892 785.000  c
91.6735 785.000 98.3892 791.716 98.3892 800.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
278.389 650.000 m
278.389 658.284 271.674 665.000 263.389 665.000  c
255.105 665.000 248.389 658.284 248.389 650.000  c
248.389 641.716 255.105 635.000 263.389 635.000  c
271.674 635.000 278.389 641.716 278.389 650.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-81.6108 650.000 m
-81.6108 658.284 -88.3265 665.000 -96.6108 665.000  c
-104.895 665.000 -111.611 658.284 -111.611 650.000  c
-111.611 641.716 -104.895 635.000 -96.6108 635.000  c
-88.3265 635.000 -81.6108 641.716 -81.6108 650.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
98.3892 620.000 m
98.3892 628.284 91.6735 635.000 83.3892 635.000  c
75.1050 635.000 68.3892 628.284 68.3892 620.000  c
68.3892 611.716 75.1050 605.000 83.3892 605.000  c
91.6735 605.000 98.3892 611.716 98.3892 620.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
98.3892 710.000 m
98.3892 718.284 91.6735 725.000 83.3892 725.000  c
75.1050 725.000 68.3892 718.284 68.3892 710.000  c
68.3892 701.716 75.1050 695.000 83.3892 695.000  c
91.6735 695.000 98.3892 701.716 98.3892 710.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
43.3892 665.000 m
43.3892 673.284 36.6735 680.000 28.3892 680.000  c
20.1050 680.000 13.3892 673.284 13.3892 665.000  c
13.3892 656.716 20.1050 650.000 28.3892 650.000  c
36.6735 650.000 43.3892 656.716 43.3892 665.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
158.389 665.000 m
158.389 673.284 151.674 680.000 143.389 680.000  c
135.105 680.000 128.389 673.284 128.389 665.000  c
128.389 656.716 135.105 650.000 143.389 650.000  c
151.674 650.000 158.389 656.716 158.389 665.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-518.166 590.000 m
-518.166 598.284 -524.882 605.000 -533.166 605.000  c
-541.450 605.000 -548.166 598.284 -548.166 590.000  c
-548.166 581.716 -541.450 575.000 -533.166 575.000  c
-524.882 575.000 -518.166 581.716 -518.166 590.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-338.166 590.000 m
-338.166 598.284 -344.882 605.000 -353.166 605.000  c
-361.450 605.000 -368.166 598.284 -368.166 590.000  c
-368.166 581.716 -361.450 575.000 -353.166 575.000  c
-344.882 575.000 -338.166 581.716 -338.166 590.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-518.166 740.000 m
-518.166 748.284 -524.882 755.000 -533.166 755.000  c
-541.450 755.000 -548.166 748.284 -548.166 740.000  c
-548.166 731.716 -541.450 725.000 -533.166 725.000  c
-524.882 725.000 -518.166 731.716 -518.166 740.000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 -616.000 731.000 ] concat
0 0 92 82 rc
q
q
q
Q
q
Q
q
Q
q
Q
newpath
4.59375 10.5469 m
13.9844 10.5469 l
13.9844 24.4375 l
27.8594 24.4375 l
27.8594 10.5469 l
37.2500 10.5469 l
37.2500 47.0000 l
27.8594 47.0000 l
27.8594 31.5469 l
13.9844 31.5469 l
13.9844 47.0000 l
4.59375 47.0000 l
4.59375 10.5469 l
h
f
newpath
64.3594 51.1250 m
66.7240 51.7396 68.5182 52.7995 69.7422 54.3047  c
70.9661 55.8099 71.5781 57.7292 71.5781 60.0625  c
71.5781 63.5312 70.2500 66.1693 67.5938 67.9766  c
64.9375 69.7839 61.0625 70.6875 55.9688 70.6875  c
54.1771 70.6875 52.3776 70.5417 50.5703 70.2500  c
48.7630 69.9583 46.9792 69.5208 45.2188 68.9375  c
45.2188 61.9844 l
46.9062 62.8281 48.5807 63.4635 50.2422 63.8906  c
51.9036 64.3177 53.5417 64.5312 55.1562 64.5312  c
57.5417 64.5312 59.3724 64.1172 60.6484 63.2891  c
61.9245 62.4609 62.5625 61.2760 62.5625 59.7344  c
62.5625 58.1406 61.9089 56.9323 60.6016 56.1094  c
59.2943 55.2865 57.3698 54.8750 54.8281 54.8750  c
51.2188 54.8750 l
51.2188 49.0625 l
55.0156 49.0625 l
57.2760 49.0625 58.9609 48.7083 60.0703 48.0000  c
61.1797 47.2917 61.7344 46.2083 61.7344 44.7500  c
61.7344 43.4062 61.1953 42.3672 60.1172 41.6328  c
59.0391 40.8984 57.5156 40.5312 55.5469 40.5312  c
54.0990 40.5312 52.6328 40.6953 51.1484 41.0234  c
49.6641 41.3516 48.1875 41.8385 46.7188 42.4844  c
46.7188 35.8750 l
48.5000 35.3750 50.2656 35.0000 52.0156 34.7500  c
53.7656 34.5000 55.4844 34.3750 57.1719 34.3750  c
61.7135 34.3750 65.1146 35.1198 67.3750 36.6094  c
69.6354 38.0990 70.7656 40.3438 70.7656 43.3438  c
70.7656 45.3958 70.2266 47.0729 69.1484 48.3750  c
68.0703 49.6771 66.4740 50.5938 64.3594 51.1250  c
h
f
Q
Q
Q
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-338.166 740.000 m
-338.166 748.284 -344.882 755.000 -353.166 755.000  c
-361.450 755.000 -368.166 748.284 -368.166 740.000  c
-368.166 731.716 -361.450 725.000 -353.166 725.000  c
-344.882 725.000 -338.166 731.716 -338.166 740.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-428.166 530.000 m
-428.166 538.284 -434.882 545.000 -443.166 545.000  c
-451.450 545.000 -458.166 538.284 -458.166 530.000  c
-458.166 521.716 -451.450 515.000 -443.166 515.000  c
-434.882 515.000 -428.166 521.716 -428.166 530.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-428.166 800.000 m
-428.166 808.284 -434.882 815.000 -443.166 815.000  c
-451.450 815.000 -458.166 808.284 -458.166 800.000  c
-458.166 791.716 -451.450 785.000 -443.166 785.000  c
-434.882 785.000 -428.166 791.716 -428.166 800.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-248.166 650.000 m
-248.166 658.284 -254.882 665.000 -263.166 665.000  c
-271.450 665.000 -278.166 658.284 -278.166 650.000  c
-278.166 641.716 -271.450 635.000 -263.166 635.000  c
-254.882 635.000 -248.166 641.716 -248.166 650.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-608.166 650.000 m
-608.166 658.284 -614.882 665.000 -623.166 665.000  c
-631.450 665.000 -638.166 658.284 -638.166 650.000  c
-638.166 641.716 -631.450 635.000 -623.166 635.000  c
-614.882 635.000 -608.166 641.716 -608.166 650.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-428.166 620.000 m
-428.166 628.284 -434.882 635.000 -443.166 635.000  c
-451.450 635.000 -458.166 628.284 -458.166 620.000  c
-458.166 611.716 -451.450 605.000 -443.166 605.000  c
-434.882 605.000 -428.166 611.716 -428.166 620.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-428.166 710.000 m
-428.166 718.284 -434.882 725.000 -443.166 725.000  c
-451.450 725.000 -458.166 718.284 -458.166 710.000  c
-458.166 701.716 -451.450 695.000 -443.166 695.000  c
-434.882 695.000 -428.166 701.716 -428.166 710.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-483.166 665.000 m
-483.166 673.284 -489.882 680.000 -498.166 680.000  c
-506.450 680.000 -513.166 673.284 -513.166 665.000  c
-513.166 656.716 -506.450 650.000 -498.166 650.000  c
-489.882 650.000 -483.166 656.716 -483.166 665.000  c
h
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-368.166 665.000 m
-368.166 673.284 -374.882 680.000 -383.166 680.000  c
-391.450 680.000 -398.166 673.284 -398.166 665.000  c
-398.166 656.716 -391.450 650.000 -383.166 650.000  c
-374.882 650.000 -368.166 656.716 -368.166 665.000  c
h
S
1.00000 w
2 J
10.0000 M
newpath
-164.111 950.000 m
-164.111 966.569 -177.542 980.000 -194.111 980.000  c
-210.679 980.000 -224.111 966.569 -224.111 950.000  c
-224.111 933.431 -210.679 920.000 -194.111 920.000  c
-177.542 920.000 -164.111 933.431 -164.111 950.000  c
h
f
5.00000 w
0 J
1.45000 M
newpath
-164.111 950.000 m
-164.111 966.569 -177.542 980.000 -194.111 980.000  c
-210.679 980.000 -224.111 966.569 -224.111 950.000  c
-224.111 933.431 -210.679 920.000 -194.111 920.000  c
-177.542 920.000 -164.111 933.431 -164.111 950.000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
-191.529 1084.90 m
-194.060 1091.41 -196.531 1095.66 -198.943 1097.64  c
-201.354 1099.63 -204.576 1100.62 -208.607 1100.62  c
-215.794 1100.62 l
-215.794 1093.10 l
-210.513 1093.10 l
-208.044 1093.10 -206.125 1092.52 -204.755 1091.35  c
-203.386 1090.17 -201.872 1087.41 -200.216 1083.04  c
-198.607 1078.95 l
-220.716 1025.13 l
-211.201 1025.13 l
-194.107 1067.90 l
-177.013 1025.13 l
-167.497 1025.13 l
-191.529 1084.90 l
h
f
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1121.50 590.000 m
971.500 590.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
956.500 725.000 m
956.500 605.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
971.500 740.000 m
1121.50 740.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1136.50 725.000 m
1136.50 605.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1034.02 538.320 m
968.981 581.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1058.98 538.320 m
1124.02 581.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1124.02 748.320 m
1058.98 791.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1034.02 791.680 m
968.981 748.320 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1148.98 598.320 m
1214.02 641.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1215.89 660.607 m
1147.11 729.393 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
945.893 729.393 m
877.107 660.607 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
944.019 598.320 m
878.981 641.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
970.730 594.743 m
1032.27 615.257 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1060.73 615.257 m
1122.27 594.743 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1122.27 735.257 m
1060.73 714.743 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1032.27 714.743 m
970.730 735.257 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
962.843 726.407 m
985.157 678.593 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
985.157 651.407 m
962.843 603.593 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1130.93 603.927 m
1112.07 651.073 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1130.93 726.073 m
1112.07 678.927 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
594.945 590.000 m
444.945 590.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
429.945 725.000 m
429.945 605.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
444.945 740.000 m
594.945 740.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
609.945 725.000 m
609.945 605.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
507.464 538.320 m
442.425 581.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
532.425 538.320 m
597.464 581.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
597.464 748.320 m
532.425 791.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
507.464 791.680 m
442.425 748.320 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
622.425 598.320 m
687.464 641.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
689.338 660.607 m
620.551 729.393 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
419.338 729.393 m
350.551 660.607 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
417.464 598.320 m
352.425 641.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
444.175 594.743 m
505.714 615.257 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
534.175 615.257 m
595.714 594.743 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
595.714 735.257 m
534.175 714.743 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
505.714 714.743 m
444.175 735.257 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
436.288 726.407 m
458.601 678.593 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
458.601 651.407 m
436.288 603.593 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
604.374 603.927 m
585.516 651.073 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
604.374 726.073 m
585.516 678.927 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
761.935 920.844 m
699.945 665.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
757.855 922.147 m
624.945 590.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
750.887 926.085 m
619.001 751.957 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
788.980 927.622 m
946.510 751.189 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
778.273 921.469 m
861.864 664.266 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
782.858 923.393 m
949.571 603.304 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1208.30 873.664 m
1274.70 925.742 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1196.50 879.406 m
1196.50 920.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1184.70 873.664 m
1118.30 925.742 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1181.79 867.351 m
798.416 944.110 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
798.549 955.184 m
1181.73 1022.41 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1185.89 1014.39 m
1117.11 945.607 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1196.50 1010.00 m
1196.50 950.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
1207.11 1014.39 m
1275.89 945.607 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
158.389 590.000 m
8.38924 590.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-6.61076 725.000 m
-6.61076 605.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
8.38924 740.000 m
158.389 740.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
173.389 725.000 m
173.389 605.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
70.9085 538.320 m
5.87000 581.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
95.8700 538.320 m
160.908 581.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
160.908 748.320 m
95.8700 791.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
70.9085 791.680 m
5.87000 748.320 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
185.870 598.320 m
250.908 641.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
252.783 660.607 m
183.996 729.393 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-17.2174 729.393 m
-86.0042 660.607 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-19.0915 598.320 m
-84.1300 641.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
7.61949 594.743 m
69.1590 615.257 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
97.6195 615.257 m
159.159 594.743 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
159.159 735.257 m
97.6195 714.743 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
69.1590 714.743 m
7.61949 735.257 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-.267478 726.407 m
22.0460 678.593 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
22.0460 651.407 m
-.267478 603.593 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
167.818 603.927 m
148.960 651.073 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
167.818 726.073 m
148.960 678.927 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-368.166 590.000 m
-518.166 590.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-533.166 725.000 m
-533.166 605.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-518.166 740.000 m
-368.166 740.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-353.166 725.000 m
-353.166 605.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-455.647 538.320 m
-520.685 581.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-430.685 538.320 m
-365.647 581.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-365.647 748.320 m
-430.685 791.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-455.647 791.680 m
-520.685 748.320 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-340.685 598.320 m
-275.647 641.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-273.773 660.607 m
-342.560 729.393 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-543.773 729.393 m
-612.560 660.607 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-545.647 598.320 m
-610.685 641.680 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-518.936 594.743 m
-457.396 615.257 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-428.936 615.257 m
-367.396 594.743 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-367.396 735.257 m
-428.936 714.743 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-457.396 714.743 m
-518.936 735.257 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-526.823 726.407 m
-504.509 678.593 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-504.509 651.407 m
-526.823 603.593 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-358.737 603.927 m
-377.595 651.073 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-358.737 726.073 m
-377.595 678.927 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-201.175 920.844 m
-263.166 665.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-205.256 922.147 m
-338.166 590.000 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-212.224 926.085 m
-344.110 751.957 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-174.130 927.622 m
-16.6010 751.189 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-184.838 921.469 m
-101.247 664.266 l
S
1.00000 w
2 J
10.0000 M
5.00000 w
0 J
1.45000 M
newpath
-180.253 923.393 m
-13.5398 603.304 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
-164.111 950.000 m
739.000 950.000 l
S
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
